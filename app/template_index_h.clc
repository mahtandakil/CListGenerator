/****************************************************************************
* Created for: <[PROJECT]>
* Dev line: <[DEVLINE]>
* Creation day: <[CREATIONDATE]>
* Last change: <[TODAY]>
* Autogen: <[VERSION]>
****************************************************************************/


#include "<[BASENAME]>.h"


#include <iostream>


using namespace std;


#ifndef <[BASENAME]{capital}>INDEX_H
#define <[BASENAME]{capital}>INDEX_H


class <[BASENAME]{first}>Index
{
	public:
		<[BASENAME]{first}>Index();
		virtual ~<[BASENAME]{first}>Index();

		int createRegister();
		int createRegister(string tag);
		int freeList();
		int getId(int id);
		string getTag(int id);
		bool getAvailable(int id);
		<[BASENAME]{first}>* get<[BASENAME]{first}>ById(int id);
		<[BASENAME]{first}>* getNext(int id);
		<<<FOR_ARGS>>>
		<[ARG_TYPE]> get<[ARG_NAME]>(int id);
		<<</FOR_ARGS>>>
		<<<FOR_ARGS>>>
		int searchBy<[ARG_NAME]>(<[ARG_TYPE]> <[ARG_NAME]>);
		<<</FOR_ARGS>>>
		int setData(int id, <[FULLLIST_ARGS]{except:id}>);
		<<<FOR_ARGS>>>
		int set<[ARG_NAME]{first}>(int id, <[ARG_NAME]>);
		<<</FOR_ARGS>>>


	protected:


	private:
		int count;
		<[BASENAME]{first}>* first;
		<[BASENAME]{first}>* last;

		int searchAvailable();

};


#endif // MODELOINDEX_H


